# Independent settings for the local costmap
local_costmap:
   global_frame: map # sets what coordinate frame the costmap should run in
   robot_base_frame: robot_footprint
   update_frequency: 2.0 # the Hz at which the costmap will run its update loop
   publish_frequency: 1.0 # the Hz at which the costmap will publish visualization information
   width: 5.0 # Width of the local costmap in meters (default: 10)
   height: 5.0 #  Height of the local costmap in meters (default: 10)
   resolution: 0.05 # Resolution of the map in meters per cell
   
   inflation_radius: 0.4  # max. distance from an obstacle at which costs are incurred for planning paths
   cost_scaling_factor:  0.4  # exponential rate at which the obstacle cost drops off

   # define the coordinates of the robot outline
   footprint: [[0.25,0.16],[0.25,-0.16],[-0.25,-0.16],[-0.25,0.16]]
   #robot_radius: 0.4
   footprint_padding: 0.0 # lower than the padding used by the global planner
   
   publish_cost_grid: false # to visualize the cost function produced by the local planner in rviz (for debugging)

   # Use a static local costmap when generating local plans without any obstacle detection sensors
   static_map: true # determines whether or not the costmap should initialize itself based on a map served by the map_server
   rolling_window: false # true means the costmap will remain centered around the robot as the robot moves through the world
   #origin_x: -2.5
   #origin_y: -2.5
   # If no plugins parameters are provided the initialization code will assume that the configuration is pre-Hydro and will load a default set of plugins with default namespaces
   plugins:
    - {name: static_layer, type: "costmap_2d::StaticLayer"}
    - {name: inflation_layer,     type: "costmap_2d::InflationLayer"}
   # - {name: obstacle_layer,      type: "costmap_2d::VoxelLayer"}
